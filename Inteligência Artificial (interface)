html_code = """
<link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@500&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">

<style>
@keyframes bubbleFloat {
    10% { transform: translate3d(0px); opacity: 1; }
    30% { transform: translate3d(-1px); opacity: 0.90; }
    50% { transform: translate3d(-2px); opacity: 0.80; }
    70% { transform: translate3d(-3px); opacity: 0.70; }
}

body {
    margin: 0;
    padding: 0;
    font-family: 'Orbitron', sans-serif;
    background: linear-gradient(135deg, #0f0f1a, #1b1b2f);
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;
    background-attachment: fixed;
    color: #ffffff;
    display: flex;
    flex-direction: column;
    height: 100vh;
    overflow: hidden;
    position: relative;
    transition: background-image 0.3s ease-in-out;
}

.glow-circle {
    position: absolute;
    border-radius: 50%;
    background: radial-gradient(circle, rgba(140,82,255,0.25) 0%, transparent 70%);
    box-shadow: 0 0 40px 20px #8c52ff44;
    width: 200px;
    height: 200px;
    animation: float 6s ease-in-out infinite alternate;
    filter: blur(8px);
    z-index: 0;
}

.glow-circle.one { top: 15%; left: 8%; animation-delay: 0s; }
.glow-circle.two {
    bottom: 10%; right: 10%;
    background: radial-gradient(circle, rgba(0,255,255,0.25) 0%, transparent 70%);
    box-shadow: 0 0 35px 18px #00ffff44;
    animation-delay: 2s;
}
.glow-circle.three {
    top: 55%; left: 60%; width: 160px; height: 160px;
    background: radial-gradient(circle, rgba(140,82,255,0.2) 0%, transparent 70%);
    box-shadow: 0 0 30px 15px #8c52ff33;
    animation-delay: 4s;
}

@keyframes float {
    0% { transform: translateY(0px); opacity: 0.4; }
    50% { transform: translateY(-20px); opacity: 0.6; }
    100% { transform: translateY(0px); opacity: 0.4; }
}

.title-bar {
    position: fixed; top: 0; left: 0; width: 100%;
    padding: 0.7rem 1.5rem;
    background: linear-gradient(to right, #1a1a2d, #0e0e1e);
    border-bottom: 1px solid #8c52ff44;
    display: flex;
    align-items: center;
    gap: 1rem;
    box-shadow: 0 0 12px #8c52ff33;
    z-index: 1001;
}

.menu-icon {
    font-size: 1.5rem;
    color: #8c52ff;
    cursor: pointer;
    transition: transform 0.2s;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0.3rem;
    user-select: none;
}

.menu-icon:hover { transform: scale(1.15); }

.title-bar h1 {
    margin: 0;
    font-size: 1.4rem;
    color: #8c52ff;
    flex: 1;
    letter-spacing: 1px;
    text-shadow: 0 0 8px #8c52ff99;
}

#chat-container {
    margin-top: 64px;
    margin-bottom: 100px;
    padding: 1.5rem 2rem;
    flex: 1;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    z-index: 1;
    position: relative;
}

.message {
    padding: 1rem 1.5rem;
    border-radius: 20px;
    max-width: 70%;
    font-size: 1rem;
    line-height: 1.6;
    backdrop-filter: blur(14px);
    border: 1px solid rgba(255, 255, 255, 0.06);
    animation: slideUp 0.3s ease forwards, bubbleFloat 5s ease-in-out infinite;
}

.user {
    align-self: flex-end;
    background: rgba(140, 82, 255, 0.2);
    border-left: 3px solid #8c52ff;
    box-shadow: 0 0 14px rgba(140, 82, 255, 0.45), 0 0 20px rgba(140, 82, 255, 0.3);
}

.bot {
    align-self: flex-start;
    background: rgba(0, 255, 255, 0.2);
    border-right: 3px solid #00ffff;
    box-shadow: 0 0 14px rgba(0, 255, 255, 0.45), 0 0 20px rgba(0, 170, 255, 0.3);
}

.timestamp {
    font-size: 0.7rem;
    color: #bbb;
    margin-top: 5px;
    text-align: right;
}

#input-box {
    position: fixed; bottom: 0; left: 0; width: 100%;
    padding: 0.7rem 1rem;
    display: flex; align-items: center; gap: 0.6rem;
    background: #151522;
    border-top: 2px solid #8c52ff55;
    box-shadow: 0 -2px 15px #8c52ff33;
    box-sizing: border-box;
    z-index: 1000;
}

#user-input {
    flex: 1;
    padding: 0.9rem 1.2rem;
    font-size: 1rem;
    border: none;
    border-radius: 30px;
    background: #1e1e30;
    color: #ffffff;
    box-shadow: inset 0 0 10px #8c52ff66, 0 0 5px #8c52ff33;
    transition: 0.3s;
    outline: none;
}

#user-input:focus {
    box-shadow: 0 0 20px #8c52ff99, inset 0 0 16px #8c52ffaa;
    background: #272742;
}

#send-button {
    width: 48px;
    height: 48px;
    background: linear-gradient(135deg, #00ffff, #8c52ff);
    border: none;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0 0 15px #00ffffaa, 0 0 30px #8c52ff55;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

#send-button:hover {
    transform: scale(1.2);
    box-shadow: 0 0 25px #00ffffcc, 0 0 35px #8c52ffaa;
}

#send-button svg {
    width: 24px;
    height: 24px;
    fill: #111;
}

@keyframes slideUp {
    from { transform: translateY(20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
}

#side-menu {
    position: fixed;
    top: 0;
    left: 0;
    width: 320px;
    height: 100%;
    background: #1b1b2f;
    border-right: 2px solid #8c52ff44;
    box-shadow: 4px 0 20px #8c52ff33;
    padding: 2rem 1.5rem;
    transform: translateX(-100%);
    opacity: 0;
    visibility: hidden;
    transition: transform 0.4s ease, opacity 0.3s ease;
    z-index: 2000;
    display: flex;
    flex-direction: column;
    gap: 1.2rem;
}

#side-menu.active {
    transform: translateX(0);
    opacity: 1;
    visibility: visible;
}

#side-menu h2 {
    color: #8c52ff;
    font-size: 1.4rem;
    margin-bottom: 1rem;
    text-shadow: 0 0 6px #8c52ff88;
    border-bottom: 1px solid #8c52ff44;
    padding-bottom: 0.5rem;
}

#side-menu label {
    display: flex;
    align-items: center;
    gap: 0.6rem;
    margin-top: 1rem;
    margin-bottom: 0.3rem;
    color: #ccc;
    font-size: 0.95rem;
}

#side-menu i {
    color: #8c52ff;
    min-width: 20px;
}

#bg-url {
    background: #1e1e30;
    border: 1px solid #8c52ff66;
    padding: 0.6rem 0.9rem;
    border-radius: 12px;
    color: #fff;
    width: 100%;
    max-width: 90%;
    box-shadow: inset 0 0 8px #8c52ff55, 0 0 8px #8c52ff33;
    font-size: 0.95rem;
    outline: none;
    transition: all 0.3s ease;
    box-sizing: border-box;
}

@media (max-width: 400px) {
    #bg-url {
        font-size: 0.85rem;
        padding: 0.5rem 0.7rem;
    }
}

#close-menu {
    background: linear-gradient(to right, #2b2b45, #1e1e30);
    color: #ffffff;
    border: 1px solid #8c52ff66;
    border-radius: 10px;
    padding: 0.6rem 1rem;
    cursor: pointer;
    width: 100%;
    font-size: 1rem;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    box-shadow: 0 0 12px #8c52ff55;
    transition: 0.3s ease;
    margin-top: 0.5rem;
}

#close-menu:hover {
    background: #8c52ff33;
    box-shadow: 0 0 20px #8c52ffaa;
    color: #fff;
}

.bubble-preview {
    cursor: pointer;
    padding: 0.7rem 1rem;
    border-radius: 20px;
    font-size: 0.9rem;
    max-width: 80%;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.05);
    margin-bottom: 0.5rem;
    position: relative;
}

#user-preview {
    background: rgba(140, 82, 255, 0.2);
    border-left: 3px solid #8c52ff;
    box-shadow: 0 0 14px #8c52ff77, 0 0 20px #8c52ff55;
    align-self: flex-end;
}

#bot-preview {
    background: rgba(0, 255, 255, 0.2);
    border-right: 3px solid #00ffff;
    box-shadow: 0 0 14px #00ffff77, 0 0 20px #00ffff55;
    align-self: flex-start;
}

.bubble-preview input[type="color"] {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    width: 100%;
    height: 100%;
    cursor: pointer;
}
</style>

<div class="glow-circle one"></div>
<div class="glow-circle two"></div>
<div class="glow-circle three"></div>

<div class="title-bar">
    <div class="menu-icon" onclick="document.getElementById('side-menu').classList.add('active')">&#8942;</div>
    <h1>Chat Neon</h1>
</div>

<div id="side-menu">
    <h2>⚙️ Configurações</h2>
    <button id="close-menu"><i class="fas fa-times"></i><span>Fechar</span></button>
    <label><i class="fas fa-image"></i> URL de Fundo:</label>
    <input type="text" id="bg-url" placeholder="Cole a URL da imagem">
    <label><i class="fas fa-user"></i> Balão do Usuário:</label>
    <div class="bubble-preview" id="user-preview">Exemplo de mensagem do usuário
        <input type="color" id="user-color" value="#8c52ff">
    </div>
    <label><i class="fas fa-robot"></i> Balão da IA:</label>
    <div class="bubble-preview" id="bot-preview">Exemplo de mensagem da IA
        <input type="color" id="bot-color" value="#00ffff">
    </div>
</div>

<div id="chat-container"></div>

<div id="input-box">
    <input type="text" id="user-input" placeholder="Digite sua mensagem..." aria-label="Digite sua mensagem">
    <button id="send-button" title="Enviar mensagem">
        <svg viewBox="0 0 24 24"><path d="M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"/></svg>
    </button>
</div>

<script>
const chatContainer = document.getElementById("chat-container");
const inputBox = document.getElementById("user-input");
const sendButton = document.getElementById("send-button");
let messageCounter = 0;

function getTime() {
    const now = new Date();
    return now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
}

function appendMessage(content, sender) {
    const msg = document.createElement("div");
    msg.className = "message " + sender;
    msg.innerHTML = `<div>${content}</div><div class="timestamp">${getTime()}</div>`;
    chatContainer.appendChild(msg);
    chatContainer.scrollTop = chatContainer.scrollHeight;
}

async function enviarMensagem() {
    const userText = inputBox.value.trim();
    if (userText === "") return;

    appendMessage(userText, "user");
    inputBox.value = "";

    const resposta = await google.colab.kernel.invokeFunction('notebook.get_response', [userText], {});
    const cleanResponse = resposta.data['text/plain'].replace(/^'(.*)'$/, "$1");
    appendMessage(cleanResponse, "bot");
}

sendButton.onclick = enviarMensagem;
inputBox.addEventListener("keypress", function(e) {
    if (e.key === "Enter") enviarMensagem();
});

document.getElementById("close-menu").onclick = () =>
    document.getElementById("side-menu").classList.remove("active");

document.getElementById("bg-url").addEventListener("change", function() {
    const url = this.value.trim();
    if (url) {
        document.body.style.backgroundImage = `url('${url}')`;
        document.body.style.backgroundSize = "cover";
        document.body.style.backgroundPosition = "center";
        document.body.style.backgroundRepeat = "no-repeat";
        document.body.style.backgroundAttachment = "fixed";
    }
});

document.getElementById("user-color").addEventListener("input", function() {
    const color = this.value;
    const style = document.createElement('style');
    style.innerHTML = `
    .user {
        background: ${color}33 !important;
        border-left: 3px solid ${color} !important;
        box-shadow: 0 0 14px ${color}77, 0 0 20px ${color}55 !important;
    }
    #user-preview {
        background: ${color}33 !important;
        border-left: 3px solid ${color} !important;
        box-shadow: 0 0 14px ${color}77, 0 0 20px ${color}55 !important;
    }`;
    document.head.appendChild(style);
});

document.getElementById("bot-color").addEventListener("input", function() {
    const color = this.value;
    const style = document.createElement('style');
    style.innerHTML = `
    .bot {
        background: ${color}33 !important;
        border-right: 3px solid ${color} !important;
        box-shadow: 0 0 14px ${color}77, 0 0 20px ${color}55 !important;
    }
    #bot-preview {
        background: ${color}33 !important;
        border-right: 3px solid ${color} !important;
        box-shadow: 0 0 14px ${color}77, 0 0 20px ${color}55 !important;
    }`;
    document.head.appendChild(style);
});
</script>
"""

display(HTML(html_code))
